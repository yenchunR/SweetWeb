{"ast":null,"code":"var _jsxFileName = \"/Users/ruru/react_hello/src/Component/Sweet.js\";\nimport React, { Component } from 'react';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport { Spinner } from 'react-bootstrap';\nimport { BottomScrollListener } from 'react-bottom-scroll-listener';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PhotoSearchPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: [],\n      loaded: false,\n      queryString: '',\n      loading: false,\n      errorOccured: false,\n      nextPageLinks: null,\n      linksVisited: 0,\n      newImagesLoaded: false\n    };\n\n    this.changeHandler = event => {\n      this.setState({\n        queryString: '' + event.target.value\n      });\n    };\n\n    this.searchExecuteHandler = () => {\n      //removes all the data from previous search and gives user a new start without reloading... \n      this.setState({\n        loading: true,\n        linksVisited: 0,\n        nextPageLinks: null\n      });\n      let query = this.state.queryString;\n      let url = \"https://api.pexels.com/v1/search?query=\" + query + \"&orientation=landscape\";\n      const access_token = '563492ad6f91700001000001c5f0fdbccfbc4f36bde43e2f95914b76';\n      axios.get(url, {\n        headers: {\n          'Authorization': `${access_token}`\n        }\n      }).then(data => {\n        let nextLink = data.data.next_page;\n        let nextLinkList = [];\n        nextLinkList.push(nextLink);\n        this.setState({\n          images: data.data.photos,\n          loaded: true,\n          loading: false,\n          errorOccured: false,\n          nextPageLinks: nextLinkList\n        });\n      }).catch(err => {\n        this.setState({\n          loading: false,\n          errorOccured: true\n        });\n      });\n    };\n\n    this.nextPageHandler = () => {\n      this.setState({\n        loading: true\n      });\n      const access_token = '563492ad6f91700001000001c5f0fdbccfbc4f36bde43e2f95914b76';\n      axios.get(this.state.nextPageLinks[this.state.linksVisited], {\n        headers: {\n          'Authorization': `${access_token}`\n        }\n      }).then(data => {\n        let oldImages = this.state.images;\n        let allLinks = this.state.nextPageLinks;\n        let nextLink = '' + data.data.next_page;\n        allLinks.push(nextLink);\n        let newImages = data.data.photos;\n        newImages.map(image => {\n          oldImages.push(image);\n          return null;\n        });\n        let linkCounter = this.state.linksVisited + 1; // console.log(oldImages, linkCounter, this.state.nextPageLinks);\n\n        this.setState({\n          images: oldImages,\n          newImagesLoaded: true,\n          loading: false,\n          errorOccured: false,\n          linksVisited: linkCounter,\n          nextPageLinks: allLinks\n        });\n      }).catch(err => {\n        this.setState({\n          loading: false,\n          errorOccured: true\n        });\n      });\n    };\n\n    this.enterPressHandler = e => {\n      if (e.key === \"Enter\") {\n        e.preventDefault();\n        this.searchExecuteHandler();\n        document.activeElement.blur();\n      }\n    };\n  }\n\n  render() {\n    let loadingDiv = null;\n\n    if (this.state.loading) {\n      // <div className={classes.GeneralDivs} >Loading....</div>\n      loadingDiv = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 36\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 30\n      }, this);\n    }\n\n    let results = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please search something in the search box!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 27\n    }, this);\n\n    if (this.state.loaded || this.state.newImagesLoaded) {\n      let counter = 0;\n      results = this.state.images.map(image => {\n        // creates a unique id for each element\n        counter += 1;\n        let id = image.id + \"_\" + counter;\n        return /*#__PURE__*/_jsxDEV(Container, {\n          sourceLink: image.src.medium,\n          alt: image.photographer\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this);\n      });\n    } //Checks if the query was valid and returns the error\n\n\n    if (this.state.images.length === 0 && this.state.errorOccured || this.state.images.length === 0 && this.state.loaded) {\n      results = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Sorry your search doesn't match with anything on our database... \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 98\n        }, this), \"Try something else... \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 27\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onScroll: this.infiniteScrollHandler,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        onChangeHandler: this.changeHandler,\n        onClickHandler: this.searchExecuteHandler,\n        placeholder: 'Search photos here...',\n        onEnterPress: this.enterPressHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: loadingDiv\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PhotoSearchPage;","map":{"version":3,"sources":["/Users/ruru/react_hello/src/Component/Sweet.js"],"names":["React","Component","Container","axios","TextField","Spinner","BottomScrollListener","PhotoSearchPage","state","images","loaded","queryString","loading","errorOccured","nextPageLinks","linksVisited","newImagesLoaded","changeHandler","event","setState","target","value","searchExecuteHandler","query","url","access_token","get","headers","then","data","nextLink","next_page","nextLinkList","push","photos","catch","err","nextPageHandler","oldImages","allLinks","newImages","map","image","linkCounter","enterPressHandler","e","key","preventDefault","document","activeElement","blur","render","loadingDiv","results","counter","id","src","medium","photographer","length","infiniteScrollHandler","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport { Spinner } from 'react-bootstrap';\nimport {BottomScrollListener} from 'react-bottom-scroll-listener';\n\n\nclass PhotoSearchPage extends Component{\n\n    state = {\n        images:[],\n        loaded: false,\n        queryString:'',\n        loading:false,\n        errorOccured:false,\n        nextPageLinks:null,\n        linksVisited:0,\n        newImagesLoaded: false\n    }\n\n    //Handles the query that is being entered in the input box\n    changeHandler = (event) => {\n        this.setState({queryString: ''+event.target.value});\n    }\n    \n\n    // Handles the first API call made by the app\n    searchExecuteHandler = () => { \n        //removes all the data from previous search and gives user a new start without reloading... \n        this.setState({loading: true, linksVisited:0, nextPageLinks:null});\n        let query = this.state.queryString;\n        let url = \"https://api.pexels.com/v1/search?query=\"+ query +\"&orientation=landscape\";  \n        const access_token = '563492ad6f91700001000001c5f0fdbccfbc4f36bde43e2f95914b76';  \n        axios.get(url, {  \n            headers: {  \n                'Authorization': `${access_token}`  \n            }  \n        }).then(data => {\n            let nextLink = data.data.next_page;\n            let nextLinkList = [];\n            nextLinkList.push(nextLink);\n            this.setState(\n                        {\n                        images: data.data.photos, \n                        loaded:true, \n                        loading:false, \n                        errorOccured:false, \n                        nextPageLinks:nextLinkList\n                    });\n        }).catch(err => {\n            this.setState({loading:false, errorOccured:true});\n        })\n    };\n\n\n    //Handles the next page calls or kind of like an infinite scroll function\n    nextPageHandler = () => {\n        this.setState({loading: true});\n        const access_token = '563492ad6f91700001000001c5f0fdbccfbc4f36bde43e2f95914b76';  \n            axios.get(this.state.nextPageLinks[this.state.linksVisited], {  \n            headers: {  \n                'Authorization': `${access_token}`  \n            }  \n        }).then(data => {\n            let oldImages = this.state.images;\n\n            let allLinks = this.state.nextPageLinks;\n\n            let nextLink = ''+data.data.next_page;\n            allLinks.push(nextLink);\n\n            let newImages = data.data.photos;\n            newImages.map(image => {\n                oldImages.push(image);\n                return null;\n            });\n            \n            let linkCounter = this.state.linksVisited+1;\n\n            // console.log(oldImages, linkCounter, this.state.nextPageLinks);\n            this.setState({images: oldImages,newImagesLoaded:true, loading:false, \n                errorOccured:false, linksVisited:linkCounter, nextPageLinks:allLinks});\n        }).catch(err => {\n            this.setState({loading:false, errorOccured:true});\n        })\n    }  \n    \n\n    enterPressHandler = (e) =>{\n        if (e.key === \"Enter\"){ \n            e.preventDefault();\n            this.searchExecuteHandler();\n            document.activeElement.blur();\n        }   \n    }\n\n\n    render(){\n        let loadingDiv = null;\n            if(this.state.loading){\n                // <div className={classes.GeneralDivs} >Loading....</div>\n                loadingDiv = <div> <br></br> <Spinner animation=\"border\" /></div>\n            }\n            \n            let results = <div>Please search something in the search box!</div>\n            \n            if (this.state.loaded || this.state.newImagesLoaded\n                ){\n                let counter = 0\n                results = this.state.images.map(image => {\n                    // creates a unique id for each element\n                    counter +=1;\n                    let id = image.id + \"_\" + counter;\n                    return(\n                    <Container key={id} sourceLink = {image.src.medium} alt={image.photographer}/>    \n                    )\n\n            \n                })\n            }\n\n            //Checks if the query was valid and returns the error\n            if((this.state.images.length===0 && this.state.errorOccured) || (this.state.images.length===0 && this.state.loaded)){\n                results = <div> Sorry your search doesn't match with anything on our database... <br></br>\n                Try something else... </div>\n            }\n            \n        return (\n            \n            <div onScroll={this.infiniteScrollHandler}>\n                <TextField\n                onChangeHandler={this.changeHandler}  \n                onClickHandler={this.searchExecuteHandler}\n                placeholder={'Search photos here...'}\n                onEnterPress={this.enterPressHandler}/>\n                <br></br>\n                <div  style={{textAlign:'center'}}>{results}</div>\n                <div style={{textAlign:'center'}}>{loadingDiv}\n                {/* Handles the scroll action and triggers a function when user scrolls at the end of page */}\n                \n                </div>\n                \n            </div>\n        )\n    }\n\n}\n\nexport default PhotoSearchPage;"]},"metadata":{},"sourceType":"module"}