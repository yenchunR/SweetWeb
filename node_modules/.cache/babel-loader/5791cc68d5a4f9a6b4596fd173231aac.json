{"ast":null,"code":"import _classCallCheck from\"/Users/ruru/react_hello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ruru/react_hello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ruru/react_hello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ruru/react_hello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import axios from'axios';import PersonAddRoundedIcon from'@material-ui/icons/PersonAddRounded';import PeopleAltIcon from'@material-ui/icons/PeopleAlt';import GitHubIcon from'@material-ui/icons/GitHub';import LocationOnIcon from'@material-ui/icons/LocationOn';import AssignmentIndIcon from'@material-ui/icons/AssignmentInd';import ListItem from'@material-ui/core/ListItem';import ListItemIcon from'@material-ui/core/ListItemIcon';import ListItemText from'@material-ui/core/ListItemText';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var styleBack={backgroundColor:'rgba(255, 255, 255, 0.6)',height:'650px',width:'550px',alignItems:'center',borderRadius:\"16px\",margin:'0px auto'};var styleTitle={fontSize:\"35px\"};var styleBlock={marginTop:'50px'};var GithubProfile=function GithubProfile(){return/*#__PURE__*/_jsx(\"div\",{style:styleBack,children:/*#__PURE__*/_jsx(\"div\",{style:styleBlock,children:/*#__PURE__*/_jsx(UserGithub,{})})});};var UserGithub=/*#__PURE__*/function(_React$Component){_inherits(UserGithub,_React$Component);var _super=_createSuper(UserGithub);function UserGithub(props){var _this;_classCallCheck(this,UserGithub);_this=_super.call(this,props);_this.JsonUrl=\"https://api.github.com/users/yenchunR\";_this.state={userName:'',githubUrl:'',avataUrl:'',Followers:'',Followings:'',Location:'',Blog:''};return _this;}_createClass(UserGithub,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;axios.get(this.JsonUrl).then(function(result){console.log(result);var data=result.data;if(data){_this2.setState({userName:data.login,githubUrl:data.html_url,avataUrl:data.avatar_url,Followers:data.followers,Followings:data.following,Location:data.location,Blog:data.blog});}});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"img\",{src:this.state.avataUrl,style:{height:250+'px',marginTop:30+'px',borderRadius:360+'px'}}),/*#__PURE__*/_jsx(\"h3\",{style:styleTitle,children:this.state.userName}),/*#__PURE__*/_jsxs(ListItem,{button:true,component:\"a\",href:this.state.githubUrl,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(GitHubIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Github Link\"})]}),/*#__PURE__*/_jsxs(ListItem,{text:true,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(LocationOnIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:this.state.Location})]}),/*#__PURE__*/_jsxs(ListItem,{text:true,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(PersonAddRoundedIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:this.state.Followers}),/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(PeopleAltIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:this.state.Followings})]}),/*#__PURE__*/_jsxs(ListItem,{button:true,component:\"a\",href:this.state.Blog,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(AssignmentIndIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"My BLOG Link\"})]})]});}}]);return UserGithub;}(React.Component);export default GithubProfile;","map":{"version":3,"sources":["/Users/ruru/react_hello/src/github.js"],"names":["React","axios","PersonAddRoundedIcon","PeopleAltIcon","GitHubIcon","LocationOnIcon","AssignmentIndIcon","ListItem","ListItemIcon","ListItemText","styleBack","backgroundColor","height","width","alignItems","borderRadius","margin","styleTitle","fontSize","styleBlock","marginTop","GithubProfile","UserGithub","props","JsonUrl","state","userName","githubUrl","avataUrl","Followers","Followings","Location","Blog","get","then","result","console","log","data","setState","login","html_url","avatar_url","followers","following","location","blog","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport PersonAddRoundedIcon from '@material-ui/icons/PersonAddRounded';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nconst styleBack = {\n    backgroundColor: 'rgba(255, 255, 255, 0.6)',\n    height: '650px',\n    width: '550px',\n    alignItems: 'center',\n    borderRadius: \"16px\",\n    margin: '0px auto',\n};\nconst styleTitle = {\n    fontSize: \"35px\",\n}\nconst styleBlock = {\n    marginTop: '50px',\n}\n\n\nconst GithubProfile=()=>{\n    return (\n        <div style = {styleBack}>\n            <div style = {styleBlock} >\n                <UserGithub></UserGithub>\n            </div>\n        </div>\n    )\n}\nclass UserGithub extends React.Component{\n    constructor(props){\n        super(props);\n        this.JsonUrl = \"https://api.github.com/users/yenchunR\";\n        this.state = {\n            userName: '',\n            githubUrl: '',\n            avataUrl: '',\n            Followers: '',\n            Followings: '',\n            Location: '',\n            Blog: '',\n        }\n    }\n    componentDidMount(){\n        axios.get(this.JsonUrl).then(result =>{\n            console.log(result);\n            const data = result.data;\n            if(data){\n                this.setState({\n                    userName: data.login,\n                    githubUrl: data.html_url,\n                    avataUrl: data.avatar_url,\n                    Followers: data.followers,\n                    Followings: data.following,\n                    Location: data.location,\n                    Blog: data.blog,\n                });\n            }\n        });\n    }\n    render(){\n        return(\n            <div>\n                <img src={this.state.avataUrl} style={{height:250+'px',marginTop:30+'px',borderRadius: 360+'px',}}></img>\n                <h3 style={styleTitle}>{this.state.userName}</h3>\n                 <ListItem button component=\"a\" href={this.state.githubUrl}>\n                    <ListItemIcon><GitHubIcon /></ListItemIcon>\n                    <ListItemText primary=\"Github Link\" />\n                </ListItem>\n                <ListItem text>\n                    <ListItemIcon><LocationOnIcon /></ListItemIcon>\n                    <ListItemText primary={this.state.Location} />\n                </ListItem>\n                <ListItem text>\n                    <ListItemIcon><PersonAddRoundedIcon /></ListItemIcon>\n                    <ListItemText primary={this.state.Followers} />\n                    <ListItemIcon><PeopleAltIcon /></ListItemIcon>\n                    <ListItemText primary={this.state.Followings} />\n                </ListItem>\n                <ListItem button component=\"a\" href={this.state.Blog}>\n                    <ListItemIcon><AssignmentIndIcon /></ListItemIcon>\n                    <ListItemText primary=\"My BLOG Link\" />\n                </ListItem>\n            </div>\n        );\n    }\n}\nexport default GithubProfile;"]},"metadata":{},"sourceType":"module"}